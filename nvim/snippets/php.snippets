snippet pubf "Public Method"
	public function ${1:name}(): void
	{
	}

snippet prif "Privat Method"
	private function ${1:name}(): void
	{
	}

snippet pro "Protected Method"
	protected function ${1:name}(): void
	{
	}

snippet pubs "Public static Method"
	public static function ${1:name}(): void
	{
	}

snippet pris "Privat static Method"
	private static function ${1:name}(): void
	{
	}

snippet pros "Protected static Method"
	protected static function ${1:name}(): void
	{
	}

snippet pubt "Public test function"
	/** @test */
	public function ${1:test_}(): void
	{
		$$this->assertTrue(false);
	}

snippet class "Class declaration template"
	<?php

	declare(strict_types=1);

	namespace `substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\', 'g')`;

	final readonly class ${1:`vim_snippets#Filename()`}
	{
		$0
	}

snippet construct "__construct()"
	public function __construct($0)
	{
	}
